func findMin(nums []int) int {
    l := 0
    h := len(nums) -1
    mIN := 5001 // since max allowed is 5000
    for l <= h{
        m := (l+h)/2
        // pick the sorted half n it's min val
        // if nums[l] <= nums[m]{
        //     mIN = min(mIN, nums[l])
        //     l = m+1
        // }else{
        //     mIN = min(mIN, nums[m])
        //     h = m-1
        // }
        if nums[m] < mIN{
            mIN = nums[m]
        }

        if nums[l] <= nums[m] && nums[m] <= nums[h]{ // not rotated
            return min(mIN, nums[l])
        }else if nums[m] > nums[h]{ // smaller is in right side
            l = m+1
        }else if nums[l] > nums[m]{ // smaller is in left side
            h = m-1
        }
    }
    return mIN
}
