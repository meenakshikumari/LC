func singleNonDuplicate(nums []int) int {
    n := len(nums)

    if n== 1 { return nums[0] }
    if nums[0] != nums[1]{ return nums[0] }
    if nums[n-1] != nums[n-2]{ return nums[n-1] }

    l := 1
    h := len(nums)-2
    
    for l<=h{
        m := (l+h)/2
        if nums[m-1] != nums[m] && nums[m] != nums[m+1]{
            return nums[m]
        }
        // if m is odd then m-1 one will be even idx should be = to previous element
        // if above is true then eliminate left side
        // m even, m+1 should be equal then eleminate left side
        if (m %2 != 0 && nums[m-1] == nums[m]) || (m %2 == 0 && nums[m] == nums[m+1]){ 
            l = m+1
        }else{
            h = m-1
        }
    }
    return -1
}
