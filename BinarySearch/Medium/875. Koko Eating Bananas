func minEatingSpeed(piles []int, h int) int {
    //find max from the array
    var high int
    for _, v := range piles{
        if high < v {
            high = v
        }
    } // high = max(piles)
    // BS on answers
    l := 1
    for l<=high {
        m := (l+high)/2
        reqTime := totalHourReq(piles, m)
        if reqTime <= h{
            // k = m
            high = m-1
        }else{
            l = m+1
        }
    }
    return l
}

func totalHourReq(piles []int, k int) int{
    totalHours := 0
    for _, v := range piles{
        totalHours += int(math.Ceil(float64(v)/float64(k)))
    }
    return totalHours
}
