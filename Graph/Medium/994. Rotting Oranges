func orangesRotting(grid [][]int) int {
    var que [][3]int

    n := len(grid)
    m := len(grid[0])

    for i:=0;i<n;i++{
        for j:=0;j<m;j++{
            if grid[i][j] == 2{
                var q [3]int
                q[0]=i
                q[1]=j
                q[2]= 0
                que = append(que, q)
            }
        }
    }

    time := 0

    for len(que) > 0{
        i := que[0][0]
        j := que[0][1]
        time = que[0][2]
        que = que[1:]
        
        if i+1<n && grid[i+1][j] == 1{
            var q [3]int
            q[0]=i+1
            q[1]=j
            q[2]= time+1
            que = append(que, q)
            grid[i+1][j] = 2
        }

        if j+1<m && grid[i][j+1] == 1{
            var q [3]int
            q[0]=i
            q[1]=j+1
            q[2]= time+1
            que = append(que, q)
            grid[i][j+1] = 2
        }
        if i-1>=0 && grid[i-1][j] == 1{
            var q [3]int
            q[0]=i-1
            q[1]=j
            q[2]= time+1
            que = append(que, q)
            grid[i-1][j] = 2
        }

        if j-1>=0 && grid[i][j-1] == 1{
            var q [3]int
            q[0]=i
            q[1]=j-1
            q[2]= time+1
            que = append(que, q)
            grid[i][j-1] = 2
        }
    }

    for i:=0;i<n;i++{
        for j:=0;j<m;j++{
            if grid[i][j] == 1{
                return -1
            }
        }
    }

    return time
}
