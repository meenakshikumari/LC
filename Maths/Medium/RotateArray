func rotate(nums []int, k int)  {
    n := len(nums)
    
    // reverse the arr using two pointers

    for i:=0;i<n/2;i++{
       tmp := nums[i]
       nums[i] = nums[n-1-i]
       nums[n-1-i] = tmp
    }

    if k > n {
        k = (k-n)%n
    }

    // reverse the arr in two parts
    for i:=0;i<k/2;i++{
        tmp := nums[i]
       nums[i] = nums[k-1-i]
       nums[k-1-i] = tmp
    }

    j:=n-1
    for i:=k;i<j;i++{
       tmp := nums[i]
       nums[i] = nums[j]
       nums[j] = tmp
       j--
    }
    
    //abv time 0(n) and space = O(1)

    
    // //having another array to store rotated arr
    // // time: O(n) space: O(n)
    // var a []int


    // fmt.Println(k,n)

    // for i:=k; i<n;i++{
    //     a = append(a,nums[i])
    // }
    // for i:=0; i<k; i++{
    //     a = append(a,nums[i])
    // }

    // // fmt.Println(a)
    // // nums = a
    // for i:=0;i<n;i++{
    //     nums[i] = a[i]
    // }
}
