/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func preorderTraversal(root *TreeNode) []int {
    var ans []int
    if root == nil {
        return ans
    }

    // traceTreeNode(root, &ans)
    //iterative method
    var s []*TreeNode
    curr := root
    for {
        if curr != nil {
            ans = append(ans, curr.Val)
            s = append(s, curr)
            curr = curr.Left
        }else{
            if len(s) > 0 {
                elem := s[len(s)-1] // get the top
                s = s[:len(s)-1] // pop the top
                curr = elem.Right // move to right
            }else{
                break
            }
        }
    }

    // traceTreeNode(root, &ans)
    return ans
}

//recursive
func traceTreeNode(root *TreeNode, ans *[]int){
    if root == nil{
        return
    }

    *ans = append(*ans, root.Val)
    traceTreeNode(root.Left, ans)
    // *ans = append(*ans, root.Val)
    traceTreeNode(root.Right, ans)
    return 
}
