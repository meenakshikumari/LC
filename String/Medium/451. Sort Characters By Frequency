func frequencySort(s string) string {
    var max int
    h := make(map[rune]int) //O(n)
    for _, v := range s { //O(n)
        h[v] += 1
        val := h[v]
        if max < val{
            max = val
        }
    }

    sortedArr := make([][]rune, max+1) O(n)
    for k, v := range h{
        if len(sortedArr[v])==0{
            sortedArr[v] = []rune{k}
        }else{
            sortedArr[v] = append(sortedArr[v], k)
        }
    }

    var res strings.Builder
    for i:=max;i>0;i--{ // iterate from back for max val //O(n)
        val := sortedArr[i]
        for j:=0;j<len(val);j++{
            for k:=0;k<i;k++{
                res.WriteString(string(val[j]))
            }
        }
    }
    return res.String()
    
    //time: O(2n) // space: O(n)
    h := make(map[rune]int)
    for _, v := range s { //O(n)
        h[v] += 1
    }

    i:=len(h) 
    var res strings.Builder
    for i>0{ //O(n)
        max := 0
        var val rune
        for k, v := range h{
            if max < v {
                max = v
                val = k
            }
        }
        // we hv go the max, now add to resultant string
        for i:=0;i<max; i++{
            res.WriteString(string(val))
        }
        delete(h, val)
        i=len(h)
    }
    return res.String()

    //another solution
    h := make(map[rune]int)
    for _, v := range s { //O(n)
        h[v] += 1
    }

    // r := make([]rune, len(s))
    sortedH := make(map[int][]rune) 
    for k, v := range h{
        if val, ok := sortedH[v]; ok {
            sortedH[v] = append(val, k)
        }else{
            sortedH[v] = []rune{k}
        }
    }

    keys := make([]int, 0, len(sortedH))
 
    for k := range sortedH{
        keys = append(keys, k)
    } 
    sort.Ints(keys)
    var res strings.Builder
    for i:=len(keys)-1; i>=0;i--{ // iterate from back for max val
        val := sortedH[keys[i]]
        v := keys[i]
        for j:=0;j<len(val);j++{
            for i:=0;i<v;i++{
                res.WriteString(string(val[j]))
            }
        }
    }
    return res.String()
}
