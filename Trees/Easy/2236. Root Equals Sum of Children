/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func checkTree(root *TreeNode) bool {
    _, isEqual := checkRootNode(root)
    return isEqual
}

func checkRootNode(root *TreeNode)(int, bool){
    if root.Left==nil && root.Right==nil{
        return root.Val, true
    }
    if root == nil{
        return 0, true
    }

    leftVal, isLeftEq := checkRootNode(root.Left)
    if !isLeftEq{
        return 0, false
    }

    rightVal, isRightEq := checkRootNode(root.Right)
    if !isRightEq{
        return 0, false
    }
    if root.Val != leftVal+rightVal{
        return 0, false
    }
    return root.Val, true
}
