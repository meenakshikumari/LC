/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func buildTree(inorder []int, postorder []int) *TreeNode {
    if len(inorder)==0{
        return nil
    }
    n := len(postorder)
    root := &TreeNode{Val: postorder[n-1]}

    var idx int
    for i, v := range inorder{
        if v == root.Val{
            idx = i
            break
        }
    }

    leftBTPostorder := postorder[:idx]
    rightBTPostorder := postorder[idx:]

    root.Left = buildTree(inorder[:idx], leftBTPostorder)
    root.Right = buildTree(inorder[idx+1:], rightBTPostorder[:len(rightBTPostorder)-1])

    return root
}
